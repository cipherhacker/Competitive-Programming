/* vll g[n] -- x,weight,y 
bool visited[n]*/

ll prim(ll s,vll g[],bool visited[])
{
    priority_queue<pll , vector< pll >, greater<pll> > Q;
    
    ll y;

    ll minimumCost = 0;
    pll p;

    Q.push(mp(0, s));
    
    while(!Q.empty())
    {
        // Select the edge with minimum weight
        p = Q.top();
        Q.pop();
        s = p.second;
        // Checking for cycle
        
        if(visited[s] == true)
            continue;

        minimumCost += p.first;
        visited[s] = true;

        for(ll i = 0;i < g[s].size();++i)
        {
            y = g[s][i].second;
            if(visited[y] == false)
                Q.push(g[s][i]);
        }

    }
    return minimumCost;
}